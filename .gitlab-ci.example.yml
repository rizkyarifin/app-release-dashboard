# Example GitLab CI configuration for sending release data to the dashboard

variables:
  DASHBOARD_URL: "http://your-dashboard-url"  # Replace with your dashboard URL
  APP_NAME: "MyApp"

stages:
  - build
  - deploy

# Template for notifying the dashboard
.notify_dashboard:
  image: curlimages/curl:latest
  script:
    - |
      echo "Notifying release dashboard..."
      RESPONSE=$(curl -s -w "\n%{http_code}" -X POST ${DASHBOARD_URL}/webhook/gitlab \
        -H "Content-Type: application/json" \
        -d '{
          "object_kind": "build",
          "build_status": "'${CI_JOB_STATUS}'",
          "build_id": "'${CI_JOB_ID}'",
          "pipeline_id": "'${CI_PIPELINE_ID}'",
          "ref": "'${CI_COMMIT_REF_NAME}'",
          "sha": "'${CI_COMMIT_SHA}'",
          "project": {
            "name": "'${CI_PROJECT_NAME}'"
          },
          "variables": {
            "APP_NAME": "'${APP_NAME}'",
            "PLATFORM": "'${PLATFORM}'",
            "VERSION": "'${VERSION}'",
            "BUILD_NUMBER": "'${BUILD_NUMBER}'",
            "RELEASE_NOTES": "'${RELEASE_NOTES}'",
            "ARTIFACT_URL": "'${ARTIFACT_URL}'"
          }
        }')
      HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
      BODY=$(echo "$RESPONSE" | sed '$d')
      echo "Response: $BODY"
      echo "HTTP Code: $HTTP_CODE"
      if [ "$HTTP_CODE" -ne "201" ]; then
        echo "Failed to notify dashboard"
        exit 1
      fi

# Android build job
build:android:
  stage: build
  variables:
    PLATFORM: "android"
    VERSION: "1.0.0"
    BUILD_NUMBER: "${CI_PIPELINE_ID}"
    RELEASE_NOTES: "Android release ${VERSION}"
    ARTIFACT_URL: "${CI_JOB_URL}/artifacts/download"
  script:
    - echo "Building Android app version ${VERSION}..."
    # Add your Android build commands here
    - ./gradlew assembleRelease
  artifacts:
    paths:
      - app/build/outputs/apk/release/*.apk
    expire_in: 1 week
  after_script:
    - !reference [.notify_dashboard, script]
  only:
    - main
    - develop
    - /^release\/.*$/

# iOS build job
build:ios:
  stage: build
  variables:
    PLATFORM: "ios"
    VERSION: "1.0.0"
    BUILD_NUMBER: "${CI_PIPELINE_ID}"
    RELEASE_NOTES: "iOS release ${VERSION}"
    ARTIFACT_URL: "${CI_JOB_URL}/artifacts/download"
  script:
    - echo "Building iOS app version ${VERSION}..."
    # Add your iOS build commands here
    - xcodebuild -workspace MyApp.xcworkspace -scheme MyApp -configuration Release archive
  artifacts:
    paths:
      - build/*.ipa
    expire_in: 1 week
  after_script:
    - !reference [.notify_dashboard, script]
  only:
    - main
    - develop
    - /^release\/.*$/
  tags:
    - ios

# Deploy to Play Store
deploy:android:play_store:
  stage: deploy
  dependencies:
    - build:android
  variables:
    PLATFORM: "android"
    VERSION: "1.0.0"
    BUILD_NUMBER: "${CI_PIPELINE_ID}"
    RELEASE_NOTES: "Deployed to Play Store"
  script:
    - echo "Deploying to Play Store..."
    # Add your Play Store deployment commands here
  after_script:
    - !reference [.notify_dashboard, script]
  only:
    - main

# Deploy to App Store
deploy:ios:app_store:
  stage: deploy
  dependencies:
    - build:ios
  variables:
    PLATFORM: "ios"
    VERSION: "1.0.0"
    BUILD_NUMBER: "${CI_PIPELINE_ID}"
    RELEASE_NOTES: "Deployed to App Store"
  script:
    - echo "Deploying to App Store..."
    # Add your App Store deployment commands here
  after_script:
    - !reference [.notify_dashboard, script]
  only:
    - main
  tags:
    - ios